# RUN: clangd -pretty -run-synchronously < %s | FileCheck -strict-whitespace %s
Content-Length: 125

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":123,"rootPath":"clangd","capabilities":{},"trace":"off"}}
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///main.cpp","languageId":"cpp","version":1,"text":"class Foo {\n  public:\n    int foo() const;\n    int bar() const;\n};\n\nclass Bar : public Foo {\n  int foo() const;\n};\n\nvoid test() {\n  Bar().\n}"}}}
Content-Length: 151

{"jsonrpc":"2.0","id":2,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///main.cpp"},"position":{"line":11,"character":8}}}
#      CHECK:  "id": 2,
# CHECK-NEXT:  "jsonrpc": "2.0",
# CHECK-NEXT:  "result": {
# CHECK-NEXT:    "isIncomplete": false,
# CHECK-NEXT:    "items": [
# Eligible functions are at the top of the list.
# CHECK-NEXT:      {
# CHECK-NEXT:        "detail": "int",
# CHECK-NEXT:        "filterText": "bar",
# CHECK-NEXT:        "insertText": "bar",
# CHECK-NEXT:        "insertTextFormat": 1,
# CHECK-NEXT:        "kind": 2,
# CHECK-NEXT:        "label": "bar() const",
# CHECK-NEXT:        "sortText": "{{.*}}bar"
# CHECK-NEXT:      },
# CHECK-NEXT:      {
# CHECK-NEXT:        "detail": "int",
# CHECK-NEXT:        "filterText": "foo",
# CHECK-NEXT:        "insertText": "foo",
# CHECK-NEXT:        "insertTextFormat": 1,
# CHECK-NEXT:        "kind": 2,
# CHECK-NEXT:        "label": "Foo::foo() const",
# CHECK-NEXT:        "sortText": "{{.*}}foo"
# CHECK-NEXT:      },
# Ineligible private functions are not present.
#  CHECK-NOT:        "label": "foo() const",
#      CHECK:    ]
Content-Length: 44

{"jsonrpc":"2.0","id":4,"method":"shutdown"}
Content-Length: 33

{"jsonrpc":"2.0":"method":"exit"}
